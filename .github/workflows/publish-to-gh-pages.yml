name: build-and-upload-to-gh-pages
# This workflow builds the Kodi plugin and uploads it to the gh-pages branch
# of the repository. It is triggered on pushes to the main and develop branches.
# It uses the actions/checkout action to check out the repository, and the
# peaceiris/actions-gh-pages action to publish the built plugin to the gh-pages branch.

on:
  push:
    branches:
      - main
      - develop
  workflow_dispatch:
  repository_dispatch:


jobs:
  build-and-upload:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Uncomment when the KODI Repo Generator gets updated
      # - name: Checkout KODI Repo Generator
      #   uses: actions/checkout@v4
      #   with:
      #     repository: chadparry/kodi-repository.chad.parry.org
      #     ref: master
      #     path: kodi-repository-generator

      # - name: Copy needed file
      #   run: cp kodi-repository-generator/tools/create_repository.py ./tools/create_repository.py

      - name: Install dependencies
        run: |
          pip3 install gitpython pyyaml
          echo "Checking installed packages:"
          pip3 list | grep -E "(gitpython|pyyaml|GitPython|PyYAML)"
          
      - name: Verify Python modules
        run: |
          echo "Testing Python imports..."
          python3 -c "import git; print('GitPython:', git.__version__)"
          python3 -c "import yaml; print('PyYAML:', yaml.__version__)"
          python3 -c "import xml.etree.ElementTree; print('XML ET: OK')"

      - name: Set branch-dependent environment variables
        id: setenv        
        run: |
          if [ "${GITHUB_REF##*/}" = "main" ]; then
            echo "PUBLISH_DIR=./gh-pages" >> $GITHUB_OUTPUT
            echo "INFO_URL=https://repository.kodi.reavey05.com/addons.xml" >> $GITHUB_OUTPUT
            echo "CHECKSUM_URL=https://repository.kodi.reavey05.com/addons.xml.sha256" >> $GITHUB_OUTPUT
            echo "DATADIR_URL=https://repository.kodi.reavey05.com/" >> $GITHUB_OUTPUT
          else
            echo "PUBLISH_DIR=./gh-pages/${GITHUB_REF##*/}" >> $GITHUB_OUTPUT
            echo "INFO_URL=https://repository.kodi.reavey05.com/${GITHUB_REF##*/}/addons.xml" >> $GITHUB_OUTPUT
            echo "CHECKSUM_URL=https://repository.kodi.reavey05.com/${GITHUB_REF##*/}/addons.xml.sha256" >> $GITHUB_OUTPUT
            echo "DATADIR_URL=https://repository.kodi.reavey05.com/${GITHUB_REF##*/}/" >> $GITHUB_OUTPUT
          fi

      - name: Substitute variables in addon.xml
        run: |
          sed -i \
            -e "s|{{INFO_URL}}|${{ steps.setenv.outputs.INFO_URL }}|g" \
            -e "s|{{CHECKSUM_URL}}|${{ steps.setenv.outputs.CHECKSUM_URL }}|g" \
            -e "s|{{DATADIR_URL}}|${{ steps.setenv.outputs.DATADIR_URL }}|g" \
            repository.kodi.reavey05.com/addon.xml
        env:
          INFO_URL: ${{ steps.setenv.outputs.INFO_URL }}
          CHECKSUM_URL: ${{ steps.setenv.outputs.CHECKSUM_URL }}
          DATADIR_URL: ${{ steps.setenv.outputs.DATADIR_URL }}

      - name: Generate Repository
        run: |
          # Debug: Show environment
          echo "Python version: $(python3 --version)"
          echo "Working directory: $(pwd)"
          echo "Available tools:"
          ls -la tools/
          
          # Debug: Test parsing first
          echo "Testing repository config parsing..."
          REPO_URLS=$(python3 ./tools/parse_repositories_config.py repositories-config.yml)
          echo "Generated URLs: $REPO_URLS"
          
          # Debug: Test create_repository.py help
          echo "Testing create_repository.py..."
          python3 ./tools/create_repository.py --help
          
          # Run create_repository.py with all repository URLs
          echo "Running repository generation..."
          eval "python3 ./tools/create_repository.py \
            --datadir=${{ steps.setenv.outputs.PUBLISH_DIR }} \
            repository.kodi.reavey05.com \
            $REPO_URLS"

      - name: Generate index.html
        run: python3 ./tools/generate_index.py ${{ steps.setenv.outputs.PUBLISH_DIR }}

      - name: List contents of publish directory
        run: |
          echo "Contents of ${{ steps.setenv.outputs.PUBLISH_DIR }} directory:"
          find ${{ steps.setenv.outputs.PUBLISH_DIR }}


      - name: Publish to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: gh-pages
          publish_branch: gh-pages
          cname: repository.kodi.reavey05.com
          keep_files: true
